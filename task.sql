-- psql -h pg -d ucheb

-- запрос 1
-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ОЦЕНКИ, Н_ВЕДОМОСТИ.
-- Вывести атрибуты: Н_ОЦЕНКИ.ПРИМЕЧАНИЕ, Н_ВЕДОМОСТИ.ДАТА.
-- Фильтры (AND):
-- a) Н_ОЦЕНКИ.ПРИМЕЧАНИЕ = неявка.
-- b) Н_ВЕДОМОСТИ.ДАТА < 1998-01-05.
-- Вид соединения: INNER JOIN.


SELECT О.ПРИМЕЧАНИЕ, В.ДАТА
FROM Н_ОЦЕНКИ О
         INNER JOIN Н_ВЕДОМОСТИ В ON О.ПРИМЕЧАНИЕ = В.ОЦЕНКА
WHERE О.ПРИМЕЧАНИЕ = 'неявка'
  AND В.ДАТА < '1998-01-05';

-- запрос 2
-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
-- Вывести атрибуты: Н_ЛЮДИ.ФАМИЛИЯ, Н_ВЕДОМОСТИ.ИД, Н_СЕССИЯ.ДАТА.
-- Фильтры (AND):
-- a) Н_ЛЮДИ.ИД = 100012.
-- b) Н_ВЕДОМОСТИ.ИД = 1250981.
-- c) Н_СЕССИЯ.ИД > 32199.
-- Вид соединения: LEFT JOIN.

SELECT Л.ФАМИЛИЯ, В.ИД, С.ДАТА
FROM Н_ЛЮДИ Л
    LEFT JOIN Н_ВЕДОМОСТИ В on Л.ИД = В.ЧЛВК_ИД
    LEFT JOIN Н_СЕССИЯ С on Л.ИД = С.ЧЛВК_ИД
WHERE Л.ИД = 100012
  AND В.ИД = 1250981
  AND С.ИД > 32199;

-- запрос 3
-- Составить запрос, который ответит на вопрос, есть ли среди студентов ФКТИУ те, кто старше 25 лет.
SELECT Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ,
       Н_ЛЮДИ.ФАМИЛИЯ,
       Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ FROM Н_УЧЕНИКИ
INNER JOIN Н_ПЛАНЫ on Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
INNER JOIN Н_ОТДЕЛЫ on Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД
INNER JOIN Н_ЛЮДИ on Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
WHERE
    Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ' AND
    (CURRENT_TIMESTAMP - Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ) > (interval '365 days' * 25);

SELECT Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ,
       Н_ЛЮДИ.ФАМИЛИЯ,
       Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ FROM Н_УЧЕНИКИ
                                         INNER JOIN Н_ПЛАНЫ on Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
                                         INNER JOIN Н_ОТДЕЛЫ on Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД
                                         INNER JOIN Н_ЛЮДИ on Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
WHERE
        Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ' AND
        age(Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ) > interval '25 years';



-- запрос 4
-- Выдать различные имена людей и число людей с каждой из этих имен, ограничив список именами,
-- встречающимися более 10 раз на на заочной форме обучения. Для реализации использовать соединение таблиц.
SELECT ИМЯ, COUNT(ИМЯ) FROM Н_ЛЮДИ
INNER JOIN Н_ОБУЧЕНИЯ ON Н_ЛЮДИ.ИД = Н_ОБУЧЕНИЯ.ЧЛВК_ИД
INNER JOIN Н_УЧЕНИКИ ON Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
INNER JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ПЛАН_ИД
INNER JOIN Н_ОТДЕЛЫ ON Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ОТД_ИД
WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ' AND Н_ПЛАНЫ.ФО_ИД = 3 -- тут можно поменять на ВТ и на 2
GROUP BY ИМЯ
HAVING COUNT(ИМЯ) > 10
ORDER BY ИМЯ;

-- запрос 5
-- Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка),
-- у которых средняя оценка меньше средней оценк(е|и) в группе 3100.

SELECT Н_УЧЕНИКИ.ЧЛВК_ИД, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ОТЧЕСТВО,
AVG(substring(Н_ВЕДОМОСТИ.ОЦЕНКА from '^\d+')::int)
FROM Н_УЧЕНИКИ JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
JOIN Н_ВЕДОМОСТИ USING(ЧЛВК_ИД)
WHERE Н_УЧЕНИКИ.ГРУППА = '4100'
GROUP BY 1,2,3,4
HAVING AVG(substring(Н_ВЕДОМОСТИ.ОЦЕНКА from '^\d+')::int) < (
SELECT AVG(substring(Н_ВЕДОМОСТИ.ОЦЕНКА from '^\d+')::int) FROM
Н_ВЕДОМОСТИ
JOIN Н_УЧЕНИКИ USING(ЧЛВК_ИД)
WHERE Н_УЧЕНИКИ.ГРУППА = '3100'
);


-- запрос 6
--
-- Получить список студентов, отчисленных ровно первого сентября 2012 года с очной формы обучения
--  (специальность: 230101).
--  В результат включить: номер группы; номер, фамилию, имя и отчество студента; номер пункта приказа;
--  Для реализации использовать подзапрос с EXISTS.
SELECT Н_УЧЕНИКИ.ГРУППА,
       Н_ЛЮДИ.ИД,
       Н_ЛЮДИ.ФАМИЛИЯ,
       Н_ЛЮДИ.ИМЯ,
       Н_ЛЮДИ.ОТЧЕСТВО,
       Н_УЧЕНИКИ.П_ПРКОК_ИД
FROM Н_УЧЕНИКИ
         JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
         JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
         JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
    AND Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Очная'
         JOIN Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ ON Н_ПЛАНЫ.НАПС_ИД = Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.ИД
         JOIN Н_НАПР_СПЕЦ ON Н_НАПР_СПЕЦ.ИД = Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.НС_ИД
    AND Н_НАПР_СПЕЦ.КОД_НАПРСПЕЦ = '230101'
WHERE EXISTS (
    SELECT Н_УЧЕНИКИ.ИД
    FROM Н_УЧЕНИКИ
    WHERE Н_УЧЕНИКИ.ПРИЗНАК = 'отчисл'
      AND Н_УЧЕНИКИ.КОНЕЦ = '01-09-2012'
);

-- запрос 7
-- Вывести список людей, не являющихся или не являвшихся студентами ФКТИУ (данные, о которых отсутствуют в таблице Н_УЧЕНИКИ).
--  В запросе нельзя использовать DISTINCT.
SELECT ИД,
       ФАМИЛИЯ,
       ИМЯ,
       ОТЧЕСТВО
FROM Н_ЛЮДИ AS people
WHERE NOT EXISTS(SELECT *
                 FROM Н_УЧЕНИКИ
                          JOIN "Н_ПЛАНЫ" ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
                          JOIN Н_ОТДЕЛЫ ON Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД AND
                                             Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ'
                          JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
                 WHERE Н_УЧЕНИКИ.ЧЛВК_ИД = people.ИД);
